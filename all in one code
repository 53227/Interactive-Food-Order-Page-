<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>TastyExpress ‚Äì Food Delivery</title>
  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap" rel="stylesheet" />
  <style>
    /* =========== CSS RESET =========== */
    *,
    *::before,
    *::after {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: "Inter", sans-serif;
      line-height: 1.6;
      background-color: var(--bg);
      color: var(--text);
      transition: background-color 0.3s, color 0.3s;
    }

    :root {
      /* Light theme */
      --bg: #fdfdfd;
      --card: #ffffff;
      --text: #121212;
      --primary: #ff5722;
      --shadow: rgba(0, 0, 0, 0.05);
    }

    :root.dark {
      /* Dark theme overrides */
      --bg: #121212;
      --card: #1e1e1e;
      --text: #e0e0e0;
      --primary: #ff8a50;
      --shadow: rgba(0, 0, 0, 0.4);
    }

    header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 1rem 2rem;
      background-color: var(--card);
      box-shadow: 0 2px 6px var(--shadow);
      position: sticky;
      top: 0;
      z-index: 100;
    }

    header h1 {
      font-size: 1.5rem;
      color: var(--primary);
      font-weight: 700;
    }

    .controls {
      display: flex;
      gap: 1rem;
      align-items: center;
    }

    .controls input[type="search"] {
      padding: 0.5rem 0.75rem;
      border-radius: 0.5rem;
      border: 1px solid #ccc;
      width: 180px;
    }

    .toggle {
      cursor: pointer;
      padding: 0.4rem 0.8rem;
      border-radius: 9999px;
      border: 1px solid var(--primary);
      background: transparent;
      color: var(--primary);
      font-size: 0.9rem;
      font-weight: 500;
    }

    main {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
      gap: 1.5rem;
      padding: 2rem;
      max-width: 1200px;
      margin: 0 auto;
    }

    .card {
      background-color: var(--card);
      border-radius: 1rem;
      box-shadow: 0 4px 12px var(--shadow);
      display: flex;
      flex-direction: column;
      transition: transform 0.2s;
    }

    .card:hover {
      transform: translateY(-4px);
    }

    .card img {
      width: 100%;
      height: 160px;
      object-fit: cover;
      border-top-left-radius: 1rem;
      border-top-right-radius: 1rem;
    }

    .card-content {
      padding: 1rem;
      flex: 1;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
    }

    .card h2 {
      font-size: 1.1rem;
      margin-bottom: 0.25rem;
      font-weight: 600;
    }

    .price {
      color: var(--primary);
      font-weight: 700;
      margin-bottom: 0.75rem;
    }

    .features {
      font-size: 0.85rem;
      opacity: 0.8;
      margin-bottom: 1rem;
    }

    .add-btn {
      align-self: flex-start;
      background: var(--primary);
      color: #fff;
      border: none;
      padding: 0.5rem 1rem;
      border-radius: 0.5rem;
      cursor: pointer;
      transition: background 0.3s;
    }

    .add-btn:hover {
      background: #e64a19;
    }

    /* Cart */
    #cart {
      position: fixed;
      right: 1rem;
      bottom: 1rem;
      background: var(--card);
      border-radius: 1rem;
      padding: 1rem;
      box-shadow: 0 2px 10px var(--shadow);
      max-width: 280px;
      width: 90vw;
    }

    #cart h3 {
      margin-bottom: 0.5rem;
      font-size: 1.1rem;
    }

    #cart ul {
      list-style: none;
      max-height: 220px;
      overflow-y: auto;
      margin-bottom: 0.75rem;
    }

    #cart li {
      display: flex;
      justify-content: space-between;
      font-size: 0.9rem;
      margin-bottom: 0.4rem;
    }

    #total {
      font-weight: 700;
      margin-bottom: 0.5rem;
    }
  </style>
</head>
<body>
  <header>
    <h1>TastyExpress</h1>

    <div class="controls">
      <input type="search" id="search" placeholder="Search food..." />
      <button class="toggle" id="themeToggle">üåô</button>
    </div>
  </header>

  <main id="menu"></main>

  <aside id="cart">
    <h3>üõí Your Cart</h3>
    <ul id="cartItems"></ul>
    <div id="total">Total: ‚Çπ0</div>
  </aside>

  <script>
    // ======== Data (Add more items as needed) ========
    const items = [
      {
        id: 1,
        name: "Margherita Pizza",
        price: 299,
        image:
          "https://images.unsplash.com/photo-1601924582970-99438d546541?auto=format&fit=crop&w=800&q=80",
        features: ["Thin crust", "Fresh basil", "Mozzarella"],
      },
      {
        id: 2,
        name: "Classic Veg Burger",
        price: 199,
        image:
          "https://images.unsplash.com/photo-1550317138-10000687a72b?auto=format&fit=crop&w=800&q=80",
        features: ["Grilled patty", "Cheddar", "Fries included"],
      },
      {
        id: 3,
        name: "Creamy Alfredo Pasta",
        price: 249,
        image:
          "https://images.unsplash.com/photo-1588167056542-74a5c61f50ba?auto=format&fit=crop&w=800&q=80",
        features: ["Fettuccine", "Parmesan", "Garlic bread"],
      },
      {
        id: 4,
        name: "Caesar Salad",
        price: 179,
        image:
          "https://images.unsplash.com/photo-1566843970551-5fa64781e44c?auto=format&fit=crop&w=800&q=80",
        features: ["Romaine", "Croutons", "Caesar dressing"],
      },
      {
        id: 5,
        name: "Sushi Platter",
        price: 499,
        image:
          "https://images.unsplash.com/photo-1579888621052-a122b7e9be1f?auto=format&fit=crop&w=800&q=80",
        features: ["8 pcs", "Wasabi", "Pickled ginger"],
      },
      {
        id: 6,
        name: "Chocolate Lava Cake",
        price: 149,
        image:
          "https://images.unsplash.com/photo-1599785209707-28db97e44380?auto=format&fit=crop&w=800&q=80",
        features: ["Molten center", "Vanilla ice cream"],
      },
      {
        id: 7,
        name: "Paneer Tikka Wrap",
        price: 159,
        image:
          "https://images.unsplash.com/photo-1643835971673-b5d7f02cbf0c?auto=format&fit=crop&w=800&q=80",
        features: ["Whole wheat", "Mint sauce", "Onion rings"],
      },
      {
        id: 8,
        name: "Berry Smoothie Bowl",
        price: 189,
        image:
          "https://images.unsplash.com/photo-1572443532624-08d5be28d0d6?auto=format&fit=crop&w=800&q=80",
        features: ["Mixed berries", "Granola", "Honey drizzle"],
      },
    ];

    // ======== Rendering ========
    const menu = document.getElementById("menu");
    const cartItemsEl = document.getElementById("cartItems");
    const totalEl = document.getElementById("total");
    const searchInput = document.getElementById("search");

    function renderMenu(list) {
      menu.innerHTML = "";
      list.forEach((item) => {
        const card = document.createElement("div");
        card.className = "card";

        card.innerHTML = `
          <img src="${item.image}" alt="${item.name}" />
          <div class="card-content">
            <div>
              <h2>${item.name}</h2>
              <div class="price">‚Çπ${item.price}</div>
              <div class="features">${item.features.join(" ¬∑ ")}</div>
            </div>
            <button class="add-btn" onclick="addToCart(${item.id})">Add</button>
          </div>
        `;
        menu.appendChild(card);
      });
    }

    renderMenu(items);

    // ======== Cart Logic ========
    const cart = {};

    function addToCart(id) {
      cart[id] = (cart[id] || 0) + 1;
      updateCart();
    }

    function updateCart() {
      cartItemsEl.innerHTML = "";
      let total = 0;
      Object.entries(cart).forEach(([id, qty]) => {
        const item = items.find((i) => i.id == id);
        const li = document.createElement("li");
        li.innerHTML = `
          <span>${item.name} √ó ${qty}</span>
          <span>‚Çπ${item.price * qty}</span>
        `;
        cartItemsEl.appendChild(li);
        total += item.price * qty;
      });
      totalEl.textContent = `Total: ‚Çπ${total}`;
    }

    // ======== Search Filter ========
    searchInput.addEventListener("input", (e) => {
      const query = e.target.value.toLowerCase();
      const filtered = items.filter((item) =>
        item.name.toLowerCase().includes(query)
      );
      renderMenu(filtered);
    });

    // ======== Dark / Light Toggle ========
    const toggleBtn = document.getElementById("themeToggle");
    toggleBtn.addEventListener("click", () => {
      document.documentElement.classList.toggle("dark");
      toggleBtn.textContent =
        document.documentElement.classList.contains("dark") ? "‚òÄÔ∏è" : "üåô";
    });
  </script>
</body>
</html>
